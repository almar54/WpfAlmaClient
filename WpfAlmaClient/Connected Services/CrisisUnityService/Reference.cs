//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfAlmaClient.CrisisUnityService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="User")]
    [System.SerializableAttribute()]
    public class UserList : System.Collections.Generic.List<WpfAlmaClient.CrisisUnityService.User> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : WpfAlmaClient.CrisisUnityService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfAlmaClient.CrisisUnityService.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfAlmaClient.CrisisUnityService.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNum {
            get {
                return this.PhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumField, value) != true)) {
                    this.PhoneNumField = value;
                    this.RaisePropertyChanged("PhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfAlmaClient.CrisisUnityService.City))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfAlmaClient.CrisisUnityService.Category))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfAlmaClient.CrisisUnityService.Event))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfAlmaClient.CrisisUnityService.Post))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfAlmaClient.CrisisUnityService.User))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class City : WpfAlmaClient.CrisisUnityService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Category : WpfAlmaClient.CrisisUnityService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Event : WpfAlmaClient.CrisisUnityService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeverityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Post : WpfAlmaClient.CrisisUnityService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfAlmaClient.CrisisUnityService.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfAlmaClient.CrisisUnityService.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfAlmaClient.CrisisUnityService.Event EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PostDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PostTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfAlmaClient.CrisisUnityService.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfAlmaClient.CrisisUnityService.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfAlmaClient.CrisisUnityService.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfAlmaClient.CrisisUnityService.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PostDate {
            get {
                return this.PostDateField;
            }
            set {
                if ((this.PostDateField.Equals(value) != true)) {
                    this.PostDateField = value;
                    this.RaisePropertyChanged("PostDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PostTime {
            get {
                return this.PostTimeField;
            }
            set {
                if ((this.PostTimeField.Equals(value) != true)) {
                    this.PostTimeField = value;
                    this.RaisePropertyChanged("PostTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfAlmaClient.CrisisUnityService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CategoryList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Category")]
    [System.SerializableAttribute()]
    public class CategoryList : System.Collections.Generic.List<WpfAlmaClient.CrisisUnityService.Category> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CityList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="City")]
    [System.SerializableAttribute()]
    public class CityList : System.Collections.Generic.List<WpfAlmaClient.CrisisUnityService.City> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EventList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Event")]
    [System.SerializableAttribute()]
    public class EventList : System.Collections.Generic.List<WpfAlmaClient.CrisisUnityService.Event> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PostList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Post")]
    [System.SerializableAttribute()]
    public class PostList : System.Collections.Generic.List<WpfAlmaClient.CrisisUnityService.Post> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CrisisUnityService.IUnity")]
    public interface IUnity {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllUsers", ReplyAction="http://tempuri.org/IUnity/GetAllUsersResponse")]
        WpfAlmaClient.CrisisUnityService.UserList GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllUsers", ReplyAction="http://tempuri.org/IUnity/GetAllUsersResponse")]
        System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.UserList> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/Login", ReplyAction="http://tempuri.org/IUnity/LoginResponse")]
        WpfAlmaClient.CrisisUnityService.User Login(WpfAlmaClient.CrisisUnityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/Login", ReplyAction="http://tempuri.org/IUnity/LoginResponse")]
        System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.User> LoginAsync(WpfAlmaClient.CrisisUnityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertUser", ReplyAction="http://tempuri.org/IUnity/InsertUserResponse")]
        int InsertUser(WpfAlmaClient.CrisisUnityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertUser", ReplyAction="http://tempuri.org/IUnity/InsertUserResponse")]
        System.Threading.Tasks.Task<int> InsertUserAsync(WpfAlmaClient.CrisisUnityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateUser", ReplyAction="http://tempuri.org/IUnity/UpdateUserResponse")]
        int UpdateUser(WpfAlmaClient.CrisisUnityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateUser", ReplyAction="http://tempuri.org/IUnity/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(WpfAlmaClient.CrisisUnityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeleteUser", ReplyAction="http://tempuri.org/IUnity/DeleteUserResponse")]
        int DeleteUser(WpfAlmaClient.CrisisUnityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeleteUser", ReplyAction="http://tempuri.org/IUnity/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(WpfAlmaClient.CrisisUnityService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/IsUserNameFree", ReplyAction="http://tempuri.org/IUnity/IsUserNameFreeResponse")]
        bool IsUserNameFree(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/IsUserNameFree", ReplyAction="http://tempuri.org/IUnity/IsUserNameFreeResponse")]
        System.Threading.Tasks.Task<bool> IsUserNameFreeAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllCategories", ReplyAction="http://tempuri.org/IUnity/GetAllCategoriesResponse")]
        WpfAlmaClient.CrisisUnityService.CategoryList GetAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllCategories", ReplyAction="http://tempuri.org/IUnity/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.CategoryList> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertCategory", ReplyAction="http://tempuri.org/IUnity/InsertCategoryResponse")]
        int InsertCategory(WpfAlmaClient.CrisisUnityService.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertCategory", ReplyAction="http://tempuri.org/IUnity/InsertCategoryResponse")]
        System.Threading.Tasks.Task<int> InsertCategoryAsync(WpfAlmaClient.CrisisUnityService.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateCategory", ReplyAction="http://tempuri.org/IUnity/UpdateCategoryResponse")]
        int UpdateCategory(WpfAlmaClient.CrisisUnityService.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateCategory", ReplyAction="http://tempuri.org/IUnity/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<int> UpdateCategoryAsync(WpfAlmaClient.CrisisUnityService.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeleteCategory", ReplyAction="http://tempuri.org/IUnity/DeleteCategoryResponse")]
        int DeleteCategory(WpfAlmaClient.CrisisUnityService.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeleteCategory", ReplyAction="http://tempuri.org/IUnity/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<int> DeleteCategoryAsync(WpfAlmaClient.CrisisUnityService.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/IsCtgNameFree", ReplyAction="http://tempuri.org/IUnity/IsCtgNameFreeResponse")]
        bool IsCtgNameFree(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/IsCtgNameFree", ReplyAction="http://tempuri.org/IUnity/IsCtgNameFreeResponse")]
        System.Threading.Tasks.Task<bool> IsCtgNameFreeAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllCities", ReplyAction="http://tempuri.org/IUnity/GetAllCitiesResponse")]
        WpfAlmaClient.CrisisUnityService.CityList GetAllCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllCities", ReplyAction="http://tempuri.org/IUnity/GetAllCitiesResponse")]
        System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.CityList> GetAllCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertCity", ReplyAction="http://tempuri.org/IUnity/InsertCityResponse")]
        int InsertCity(WpfAlmaClient.CrisisUnityService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertCity", ReplyAction="http://tempuri.org/IUnity/InsertCityResponse")]
        System.Threading.Tasks.Task<int> InsertCityAsync(WpfAlmaClient.CrisisUnityService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateCity", ReplyAction="http://tempuri.org/IUnity/UpdateCityResponse")]
        int UpdateCity(WpfAlmaClient.CrisisUnityService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateCity", ReplyAction="http://tempuri.org/IUnity/UpdateCityResponse")]
        System.Threading.Tasks.Task<int> UpdateCityAsync(WpfAlmaClient.CrisisUnityService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeleteCity", ReplyAction="http://tempuri.org/IUnity/DeleteCityResponse")]
        int DeleteCity(WpfAlmaClient.CrisisUnityService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeleteCity", ReplyAction="http://tempuri.org/IUnity/DeleteCityResponse")]
        System.Threading.Tasks.Task<int> DeleteCityAsync(WpfAlmaClient.CrisisUnityService.City city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateCitiesFromExternalData", ReplyAction="http://tempuri.org/IUnity/UpdateCitiesFromExternalDataResponse")]
        void UpdateCitiesFromExternalData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateCitiesFromExternalData", ReplyAction="http://tempuri.org/IUnity/UpdateCitiesFromExternalDataResponse")]
        System.Threading.Tasks.Task UpdateCitiesFromExternalDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllEvents", ReplyAction="http://tempuri.org/IUnity/GetAllEventsResponse")]
        WpfAlmaClient.CrisisUnityService.EventList GetAllEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllEvents", ReplyAction="http://tempuri.org/IUnity/GetAllEventsResponse")]
        System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.EventList> GetAllEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertEvent", ReplyAction="http://tempuri.org/IUnity/InsertEventResponse")]
        int InsertEvent(WpfAlmaClient.CrisisUnityService.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertEvent", ReplyAction="http://tempuri.org/IUnity/InsertEventResponse")]
        System.Threading.Tasks.Task<int> InsertEventAsync(WpfAlmaClient.CrisisUnityService.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateEvent", ReplyAction="http://tempuri.org/IUnity/UpdateEventResponse")]
        int UpdateEvent(WpfAlmaClient.CrisisUnityService.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdateEvent", ReplyAction="http://tempuri.org/IUnity/UpdateEventResponse")]
        System.Threading.Tasks.Task<int> UpdateEventAsync(WpfAlmaClient.CrisisUnityService.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeleteEvent", ReplyAction="http://tempuri.org/IUnity/DeleteEventResponse")]
        int DeleteEvent(WpfAlmaClient.CrisisUnityService.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeleteEvent", ReplyAction="http://tempuri.org/IUnity/DeleteEventResponse")]
        System.Threading.Tasks.Task<int> DeleteEventAsync(WpfAlmaClient.CrisisUnityService.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/IsEventNameFree", ReplyAction="http://tempuri.org/IUnity/IsEventNameFreeResponse")]
        bool IsEventNameFree(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/IsEventNameFree", ReplyAction="http://tempuri.org/IUnity/IsEventNameFreeResponse")]
        System.Threading.Tasks.Task<bool> IsEventNameFreeAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllPosts", ReplyAction="http://tempuri.org/IUnity/GetAllPostsResponse")]
        WpfAlmaClient.CrisisUnityService.PostList GetAllPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetAllPosts", ReplyAction="http://tempuri.org/IUnity/GetAllPostsResponse")]
        System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.PostList> GetAllPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetPostsByDate", ReplyAction="http://tempuri.org/IUnity/GetPostsByDateResponse")]
        WpfAlmaClient.CrisisUnityService.PostList GetPostsByDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetPostsByDate", ReplyAction="http://tempuri.org/IUnity/GetPostsByDateResponse")]
        System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.PostList> GetPostsByDateAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertPost", ReplyAction="http://tempuri.org/IUnity/InsertPostResponse")]
        int InsertPost(WpfAlmaClient.CrisisUnityService.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/InsertPost", ReplyAction="http://tempuri.org/IUnity/InsertPostResponse")]
        System.Threading.Tasks.Task<int> InsertPostAsync(WpfAlmaClient.CrisisUnityService.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdatePost", ReplyAction="http://tempuri.org/IUnity/UpdatePostResponse")]
        int UpdatePost(WpfAlmaClient.CrisisUnityService.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/UpdatePost", ReplyAction="http://tempuri.org/IUnity/UpdatePostResponse")]
        System.Threading.Tasks.Task<int> UpdatePostAsync(WpfAlmaClient.CrisisUnityService.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeletePost", ReplyAction="http://tempuri.org/IUnity/DeletePostResponse")]
        int DeletePost(WpfAlmaClient.CrisisUnityService.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/DeletePost", ReplyAction="http://tempuri.org/IUnity/DeletePostResponse")]
        System.Threading.Tasks.Task<int> DeletePostAsync(WpfAlmaClient.CrisisUnityService.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetPostsByUserId", ReplyAction="http://tempuri.org/IUnity/GetPostsByUserIdResponse")]
        WpfAlmaClient.CrisisUnityService.PostList GetPostsByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetPostsByUserId", ReplyAction="http://tempuri.org/IUnity/GetPostsByUserIdResponse")]
        System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.PostList> GetPostsByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetIamge", ReplyAction="http://tempuri.org/IUnity/GetIamgeResponse")]
        byte[] GetIamge(string fileName, string post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetIamge", ReplyAction="http://tempuri.org/IUnity/GetIamgeResponse")]
        System.Threading.Tasks.Task<byte[]> GetIamgeAsync(string fileName, string post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/SaveImage", ReplyAction="http://tempuri.org/IUnity/SaveImageResponse")]
        void SaveImage(byte[] imageArray, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/SaveImage", ReplyAction="http://tempuri.org/IUnity/SaveImageResponse")]
        System.Threading.Tasks.Task SaveImageAsync(byte[] imageArray, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetImagesByPost", ReplyAction="http://tempuri.org/IUnity/GetImagesByPostResponse")]
        string[] GetImagesByPost(string post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnity/GetImagesByPost", ReplyAction="http://tempuri.org/IUnity/GetImagesByPostResponse")]
        System.Threading.Tasks.Task<string[]> GetImagesByPostAsync(string post);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUnityChannel : WpfAlmaClient.CrisisUnityService.IUnity, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnityClient : System.ServiceModel.ClientBase<WpfAlmaClient.CrisisUnityService.IUnity>, WpfAlmaClient.CrisisUnityService.IUnity {
        
        public UnityClient() {
        }
        
        public UnityClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnityClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnityClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnityClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfAlmaClient.CrisisUnityService.UserList GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.UserList> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public WpfAlmaClient.CrisisUnityService.User Login(WpfAlmaClient.CrisisUnityService.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.User> LoginAsync(WpfAlmaClient.CrisisUnityService.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public int InsertUser(WpfAlmaClient.CrisisUnityService.User user) {
            return base.Channel.InsertUser(user);
        }
        
        public System.Threading.Tasks.Task<int> InsertUserAsync(WpfAlmaClient.CrisisUnityService.User user) {
            return base.Channel.InsertUserAsync(user);
        }
        
        public int UpdateUser(WpfAlmaClient.CrisisUnityService.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(WpfAlmaClient.CrisisUnityService.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public int DeleteUser(WpfAlmaClient.CrisisUnityService.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(WpfAlmaClient.CrisisUnityService.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public bool IsUserNameFree(string username) {
            return base.Channel.IsUserNameFree(username);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserNameFreeAsync(string username) {
            return base.Channel.IsUserNameFreeAsync(username);
        }
        
        public WpfAlmaClient.CrisisUnityService.CategoryList GetAllCategories() {
            return base.Channel.GetAllCategories();
        }
        
        public System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.CategoryList> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public int InsertCategory(WpfAlmaClient.CrisisUnityService.Category category) {
            return base.Channel.InsertCategory(category);
        }
        
        public System.Threading.Tasks.Task<int> InsertCategoryAsync(WpfAlmaClient.CrisisUnityService.Category category) {
            return base.Channel.InsertCategoryAsync(category);
        }
        
        public int UpdateCategory(WpfAlmaClient.CrisisUnityService.Category category) {
            return base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCategoryAsync(WpfAlmaClient.CrisisUnityService.Category category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public int DeleteCategory(WpfAlmaClient.CrisisUnityService.Category category) {
            return base.Channel.DeleteCategory(category);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCategoryAsync(WpfAlmaClient.CrisisUnityService.Category category) {
            return base.Channel.DeleteCategoryAsync(category);
        }
        
        public bool IsCtgNameFree(string name) {
            return base.Channel.IsCtgNameFree(name);
        }
        
        public System.Threading.Tasks.Task<bool> IsCtgNameFreeAsync(string name) {
            return base.Channel.IsCtgNameFreeAsync(name);
        }
        
        public WpfAlmaClient.CrisisUnityService.CityList GetAllCities() {
            return base.Channel.GetAllCities();
        }
        
        public System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.CityList> GetAllCitiesAsync() {
            return base.Channel.GetAllCitiesAsync();
        }
        
        public int InsertCity(WpfAlmaClient.CrisisUnityService.City city) {
            return base.Channel.InsertCity(city);
        }
        
        public System.Threading.Tasks.Task<int> InsertCityAsync(WpfAlmaClient.CrisisUnityService.City city) {
            return base.Channel.InsertCityAsync(city);
        }
        
        public int UpdateCity(WpfAlmaClient.CrisisUnityService.City city) {
            return base.Channel.UpdateCity(city);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCityAsync(WpfAlmaClient.CrisisUnityService.City city) {
            return base.Channel.UpdateCityAsync(city);
        }
        
        public int DeleteCity(WpfAlmaClient.CrisisUnityService.City city) {
            return base.Channel.DeleteCity(city);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCityAsync(WpfAlmaClient.CrisisUnityService.City city) {
            return base.Channel.DeleteCityAsync(city);
        }
        
        public void UpdateCitiesFromExternalData() {
            base.Channel.UpdateCitiesFromExternalData();
        }
        
        public System.Threading.Tasks.Task UpdateCitiesFromExternalDataAsync() {
            return base.Channel.UpdateCitiesFromExternalDataAsync();
        }
        
        public WpfAlmaClient.CrisisUnityService.EventList GetAllEvents() {
            return base.Channel.GetAllEvents();
        }
        
        public System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.EventList> GetAllEventsAsync() {
            return base.Channel.GetAllEventsAsync();
        }
        
        public int InsertEvent(WpfAlmaClient.CrisisUnityService.Event _event) {
            return base.Channel.InsertEvent(_event);
        }
        
        public System.Threading.Tasks.Task<int> InsertEventAsync(WpfAlmaClient.CrisisUnityService.Event _event) {
            return base.Channel.InsertEventAsync(_event);
        }
        
        public int UpdateEvent(WpfAlmaClient.CrisisUnityService.Event _event) {
            return base.Channel.UpdateEvent(_event);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEventAsync(WpfAlmaClient.CrisisUnityService.Event _event) {
            return base.Channel.UpdateEventAsync(_event);
        }
        
        public int DeleteEvent(WpfAlmaClient.CrisisUnityService.Event _event) {
            return base.Channel.DeleteEvent(_event);
        }
        
        public System.Threading.Tasks.Task<int> DeleteEventAsync(WpfAlmaClient.CrisisUnityService.Event _event) {
            return base.Channel.DeleteEventAsync(_event);
        }
        
        public bool IsEventNameFree(string name) {
            return base.Channel.IsEventNameFree(name);
        }
        
        public System.Threading.Tasks.Task<bool> IsEventNameFreeAsync(string name) {
            return base.Channel.IsEventNameFreeAsync(name);
        }
        
        public WpfAlmaClient.CrisisUnityService.PostList GetAllPosts() {
            return base.Channel.GetAllPosts();
        }
        
        public System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.PostList> GetAllPostsAsync() {
            return base.Channel.GetAllPostsAsync();
        }
        
        public WpfAlmaClient.CrisisUnityService.PostList GetPostsByDate(System.DateTime date) {
            return base.Channel.GetPostsByDate(date);
        }
        
        public System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.PostList> GetPostsByDateAsync(System.DateTime date) {
            return base.Channel.GetPostsByDateAsync(date);
        }
        
        public int InsertPost(WpfAlmaClient.CrisisUnityService.Post post) {
            return base.Channel.InsertPost(post);
        }
        
        public System.Threading.Tasks.Task<int> InsertPostAsync(WpfAlmaClient.CrisisUnityService.Post post) {
            return base.Channel.InsertPostAsync(post);
        }
        
        public int UpdatePost(WpfAlmaClient.CrisisUnityService.Post post) {
            return base.Channel.UpdatePost(post);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePostAsync(WpfAlmaClient.CrisisUnityService.Post post) {
            return base.Channel.UpdatePostAsync(post);
        }
        
        public int DeletePost(WpfAlmaClient.CrisisUnityService.Post post) {
            return base.Channel.DeletePost(post);
        }
        
        public System.Threading.Tasks.Task<int> DeletePostAsync(WpfAlmaClient.CrisisUnityService.Post post) {
            return base.Channel.DeletePostAsync(post);
        }
        
        public WpfAlmaClient.CrisisUnityService.PostList GetPostsByUserId(int userId) {
            return base.Channel.GetPostsByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<WpfAlmaClient.CrisisUnityService.PostList> GetPostsByUserIdAsync(int userId) {
            return base.Channel.GetPostsByUserIdAsync(userId);
        }
        
        public byte[] GetIamge(string fileName, string post) {
            return base.Channel.GetIamge(fileName, post);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetIamgeAsync(string fileName, string post) {
            return base.Channel.GetIamgeAsync(fileName, post);
        }
        
        public void SaveImage(byte[] imageArray, string fileName) {
            base.Channel.SaveImage(imageArray, fileName);
        }
        
        public System.Threading.Tasks.Task SaveImageAsync(byte[] imageArray, string fileName) {
            return base.Channel.SaveImageAsync(imageArray, fileName);
        }
        
        public string[] GetImagesByPost(string post) {
            return base.Channel.GetImagesByPost(post);
        }
        
        public System.Threading.Tasks.Task<string[]> GetImagesByPostAsync(string post) {
            return base.Channel.GetImagesByPostAsync(post);
        }
    }
}
